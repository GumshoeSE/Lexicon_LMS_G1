@model Lexicon_LMS_G1.Entities.ViewModels.UsersViewModel
@{
    ViewData["Title"] = "Users";
}
<div class="container">
    <h1 class="text-center pb-3">Mange Lexicon LMS Users</h1>
    <div id="usersList" class="col-12 border border-3 rounded p-1">
        <div class="row p-2">
            <div class="col-2 align-content-center">
                <a class="" asp-route-returnUrl="~/Users" asp-area="Identity" asp-page="/Account/Register"><i class="fa-solid fa-user-plus fa-xl"></i></a>
            </div>
            <h2 class="text-center col">Users</h2>
            <div class="col-3">
                <form asp-action="Index">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="input-group mb-3">
                        <input asp-for="SearchQuery" type="text" class="form-control" placeholder="Search user" aria-label="Search user" aria-describedby="basic-addon2">
                        <div class="input-group-append">
                            <button class="btn  btn-primary" type="submit"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>



        @if (User.IsInRole("SpecialCaseRole"))
        {
            <p>
                <a class="btn btn-primary" asp-area="Identity" asp-route-returnUrl="~/Users" asp-page="/Account/Register">Add User</a>
            </p>
        }


        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Role)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Users)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CourseName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Role)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="me-2"><i class="fa-solid fa-pen-to-square fa-2xl"></i></a>
                            <a asp-action="Details" asp-route-id="@item.Id" class=""><i class="fa-solid fa-circle-info fa-2xl"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @*Paginating puttons*@
        @{
            var prevDisabled = !Model.HasPrevious ? "disabled" : "";
            var nextDisabled = !Model.HasNext ? "disabled" : "";
        }
        <div class="text-center p-3">
            <a asp-action="Index" asp-route-pageIndex="@(Model.CurrentPageIndex - 1)" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary @prevDisabled"><</a>
            @if (Model.TotalPages > 5)
            {
                if (Model.CurrentPageIndex == 4)
                {
                    <a asp-action="Index" asp-route-pageIndex="1" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">1</a>
                }
                if (Model.CurrentPageIndex > 4)
                {
                    <a asp-action="Index" asp-route-pageIndex="1" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">1</a>

                    <span>...</span>
                }
                @for (int i = (@Model.CurrentPageIndex - 2); i <= (@Model.CurrentPageIndex + 2); i++)
                {
                    @if (i != Model.CurrentPageIndex && i > 0 && i <= Model.TotalPages)
                    {
                        <a asp-action="Index" asp-route-pageIndex="@i" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">@i</a>
                    }
                    else if (i > 0 && i == Model.CurrentPageIndex)
                    {
                        <span class="btn btn-secondary">@i</span>
                    }
                }
                @if (Model.TotalPages > Model.CurrentPageIndex + 3)
                {
                    <span>...</span>
                    <a asp-action="Index" asp-route-pageIndex="@Model.TotalPages" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">@Model.TotalPages</a>
                }
                @if (Model.CurrentPageIndex + 3 == Model.TotalPages)
                {
                    <a asp-action="Index" asp-route-pageIndex="@Model.TotalPages" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">@Model.TotalPages</a>
                }
            }
            else
            {
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    @if (i != Model.CurrentPageIndex)
                    {
                        <a asp-action="Index" asp-route-pageIndex="@i" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary">@i</a>
                    }
                    else
                    {
                        <span class="btn btn-secondary">@i</span>
                    }
                }
            }
            <a asp-action="Index" asp-route-pageIndex="@(Model.CurrentPageIndex + 1)" asp-route-searchQuery="@Model.SearchQuery" class="btn btn-light border border-secondary @nextDisabled">></a>

            <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
        </div>
    </div>
</div>


