@model Lexicon_LMS_G1.Entities.ViewModels.UsersViewModel
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @if (User.IsInRole("Teacher"))
    {
        @*<a asp-action="Create">Create New</a>*@
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.LastName)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseId)
                </td>
                <td>
                    @*                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
                </td>
            </tr>
        }
    </tbody>
</table>
@*Paginating puttons*@
@{
    var prevDisabled = !Model.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.HasNext ? "disabled" : "";
}
<div class="text-center p-3">
    <a asp-action="Index" asp-route-pageIndex="@(Model.CurrentPageIndex - 1)" class="btn btn-light border border-secondary @prevDisabled"><</a>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        @if (i != Model.CurrentPageIndex)
        {
            <a asp-action="Index" asp-route-pageIndex="@i" class="btn btn-light border border-secondary">@i</a>
        }
        else
        {
            <span class="btn btn-secondary">@i</span>
        }
    }
    <a asp-action="Index" asp-route-pageIndex="@(Model.CurrentPageIndex + 1)" class="btn btn-light border border-secondary @nextDisabled">></a>

    <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
</div>

